{"version":3,"sources":["components/logo.svg","components/navbar.js","components/uploadExcel.js","components/responseArea.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultNavbar","Navbar","bg","variant","Brand","className","src","logo","width","height","alt","style","filter","UploadExcel","props","state","data","handleFile","bind","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","wb","XLSX","read","type","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","header","raw","setState","readAsArrayBuffer","this","Form","Group","Label","Text","Button","disabled","length","onClick","handleSubmit","React","Component","DragDropFile","onDrop","evt","stopPropagation","preventDefault","files","dataTransfer","onDragEnter","suppress","onDragOver","children","DataInput","isInvalid","isUploaded","handleChange","name","split","File","id","custom","Input","isValid","onChange","data-browse","Control","Feedback","border","borderRadius","transition","padding","overflowY","ResponseJSON","jsonObject","theme","onEdit","displayDataTypes","enableClipboard","fileName","fileToSave","Blob","JSON","stringify","saveAs","App","jsonObjects","parseJSON","event","updated_src","console","log","line","utterance","intent","entities","responseJSON","trim","i","entityName","entityType","push","indexOf","err","Container","Row","Col","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0738cb4b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55ca627c.svg\";","import Navbar from 'react-bootstrap/Navbar';\r\nimport logo from './logo.svg';\r\n\r\nfunction DefaultNavbar() {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className='m-auto'>\r\n                <img\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"React Bootstrap logo\"\r\n                    style={{ filter: \"invert(1)\" }}\r\n                />\r\n            </Navbar.Brand>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default DefaultNavbar;","import XLSX from 'xlsx';\r\nimport React from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\n\r\n\r\nclass UploadExcel extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n    };\r\n    this.handleFile = this.handleFile.bind(this);\r\n  };\r\n\r\n  handleFile(file) {\r\n    const reader = new FileReader();\r\n    const rABS = !!reader.readAsBinaryString;\r\n    reader.onload = (e) => {\r\n      const bstr = e.target.result;\r\n      const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array' });\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      const data = XLSX.utils.sheet_to_json(ws, { header: 1, raw: false });\r\n      this.setState({data: data});\r\n    };\r\n    if (rABS) reader.readAsBinaryString(file); else reader.readAsArrayBuffer(file);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <DragDropFile handleFile={this.handleFile}>\r\n        <Form>\r\n          <Form.Group>\r\n            <div className=\"text-center\">\r\n              <Form.Label><h4>Upload Spreadsheet</h4></Form.Label>\r\n              <DataInput handleFile={this.handleFile} />\r\n              <Form.Text className=\"text-muted\">\r\n              <b>Supported file format:</b> xlsx\r\n    </Form.Text>\r\n            </div>\r\n          </Form.Group>\r\n          <div className=\"text-center\">\r\n            <Button disabled={!this.state.data.length}\r\n              variant=\"primary\"\r\n              onClick={() => { this.props.handleSubmit(this.state.data) }}>\r\n              Convert\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </DragDropFile>\r\n    );\r\n  };\r\n};\r\n\r\nexport default UploadExcel;\r\n\r\nclass DragDropFile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  };\r\n  suppress(evt) { evt.stopPropagation(); evt.preventDefault(); };\r\n  onDrop(evt) {\r\n    evt.stopPropagation(); evt.preventDefault();\r\n    const files = evt.dataTransfer.files;\r\n    if (files && files[0]) this.props.handleFile(files[0]);\r\n  };\r\n  render() {\r\n    return (\r\n      <div onDrop={this.onDrop} onDragEnter={this.suppress} onDragOver={this.suppress}>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nclass DataInput extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isInvalid: false,\r\n      isUploaded: false\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n  };\r\n  handleChange(e) {\r\n    const files = e.target.files;\r\n    if (files && files[0] && files[0].name.split('.')[1] === 'xlsx') {\r\n      this.setState({ isInvalid: false })\r\n      this.props.handleFile(files[0]);\r\n      this.setState({ isUploaded: true })\r\n    } else {\r\n      this.setState({ isInvalid: true })\r\n      this.setState({ isUploaded: false })\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Form.File id=\"formcheck-api-custom\" custom>\r\n      <Form.File.Input isValid={this.state.isUploaded} isInvalid={this.state.isInvalid} onChange={this.handleChange}/>\r\n      <Form.File.Label data-browse=\"Button text\">\r\n        Drag & Drop file here\r\n      </Form.File.Label>\r\n      <Form.Control.Feedback type=\"valid\">Uploaded Successfully!</Form.Control.Feedback>\r\n      <Form.Control.Feedback type=\"invalid\">Invaild input type!</Form.Control.Feedback>\r\n    </Form.File>\r\n    );\r\n  };\r\n}\r\n\r\n","import { Form, Button } from 'react-bootstrap';\r\nimport ReactJson from 'react-json-view';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst style = {\r\n    border: \"1px solid #ced4da\",\r\n    borderRadius: \".25rem\",\r\n    transition: \"border-color .15s ease-in-out,box-shadow .15s ease-in-out\",\r\n    padding: \".375rem .75rem\",\r\n    height: \"60vh\",\r\n    overflowY: \"scroll\"\r\n}\r\n\r\nfunction ResponseJSON(props) {\r\n\r\n    function downloadObjectAsJson() {\r\n        var fileName = 'Utterance.json';\r\n\r\n        var fileToSave = new Blob([JSON.stringify(props.jsonObject, null, 4)], {\r\n            type: 'application/json',\r\n            name: fileName\r\n        });\r\n\r\n        saveAs(fileToSave, fileName);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group >\r\n                <div className=\"text-center\">\r\n                    <Form.Label><h4>Response JSON</h4></Form.Label>\r\n                </div>\r\n                <div style={style}>\r\n                    <ReactJson\r\n                        src={props.jsonObject}\r\n                        theme={\"summerfruit:inverted\"}\r\n                        onEdit={props.onEdit}\r\n                        displayDataTypes={false}\r\n                        enableClipboard={false}\r\n                    />\r\n                </div>\r\n            </Form.Group>\r\n\r\n            <div className=\"text-center\">\r\n                <Button variant=\"success\" disabled={!props.jsonObject.length} onClick={downloadObjectAsJson} >\r\n                    Download\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default ResponseJSON;","import React from 'react';\r\n\r\nimport { DefaultNavbar, UploadExcel, ResponseJSON } from './components';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      jsonObjects: [],\r\n    };\r\n\r\n    this.parseJSON = this.parseJSON.bind(this);\r\n    this.onEdit = this.onEdit.bind(this);\r\n  }\r\n\r\n  onEdit(event) {\r\n    this.setState({ jsonObjects: event.updated_src }, function () {\r\n      console.log(this.state.jsonObjects)\r\n    })\r\n  }\r\n\r\n  parseJSON(data) {\r\n    let jsonObjects = []\r\n    console.log(data)\r\n    try {\r\n      for (let line of data) {\r\n        let [utterance, intent, ...entities] = line\r\n        let responseJSON = {\r\n          \"text\": utterance.trim(),\r\n          \"intent\": intent.trim(),\r\n          \"entities\": []\r\n        }\r\n\r\n        for (let i = 1; i < entities.length; i+=2) {\r\n          let [entityName, entityType] = [entities[i-1], entities[i]];\r\n          entityName = entityName.trim()\r\n          entityType = entityType.trim()\r\n          responseJSON.entities.push(\r\n            {\r\n              \"entity\": entityType,\r\n              \"startPos\": utterance.indexOf(entityName),\r\n              \"endPos\": utterance.indexOf(entityName) + entityName.length - 1\r\n            }\r\n          )\r\n        }\r\n\r\n        jsonObjects.push(responseJSON)\r\n      }\r\n\r\n      this.setState({ jsonObjects: jsonObjects }, function () {\r\n        console.log(this.state.jsonObjects);\r\n      })\r\n\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <DefaultNavbar />\r\n        <br />\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <UploadExcel handleSubmit={this.parseJSON} />\r\n            </Col>\r\n            <Col>\r\n              <ResponseJSON\r\n                jsonObject={this.state.jsonObjects}\r\n                onEdit={this.onEdit}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}