{"version":3,"sources":["components/logo.svg","components/navbar.js","components/errorPopup.js","components/inputArea.js","components/responseArea.js","App.js","reportWebVitals.js","index.js"],"names":["DefaultNavbar","Navbar","bg","variant","Brand","className","src","logo","width","height","alt","style","filter","AlertInputError","props","Alert","onClose","handleOnClose","dismissible","Heading","InputUtterances","Form","onSubmit","handleSubmit","Group","Label","Control","as","value","inputString","onChange","handleChange","Button","type","border","borderRadius","transition","padding","overflowY","ResponseJSON","jsonObject","theme","onEdit","displayDataTypes","enableClipboard","onClick","fileName","fileToSave","Blob","JSON","stringify","name","saveAs","App","state","jsonObjects","showError","bind","parseJSON","event","this","setState","target","alert","preventDefault","updated_src","console","log","split","utterance","intent","entities","responseJSON","trim","entityName","entityType","push","indexOf","length","err","Container","Row","Col","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71781971.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.55ca627c.svg\";","import Navbar from 'react-bootstrap/Navbar';\r\nimport logo from './logo.svg';\r\n\r\nfunction DefaultNavbar() {\r\n    return (\r\n        <Navbar bg=\"dark\" variant=\"dark\">\r\n            <Navbar.Brand className='m-auto'>\r\n                <img\r\n                    src={logo}\r\n                    width=\"30\"\r\n                    height=\"30\"\r\n                    className=\"d-inline-block align-top\"\r\n                    alt=\"React Bootstrap logo\"\r\n                    style={{ filter: \"invert(1)\" }}\r\n                />\r\n            </Navbar.Brand>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default DefaultNavbar;","import { Alert } from 'react-bootstrap';\r\n\r\nfunction AlertInputError(props) {\r\n      return (\r\n        <Alert variant=\"danger\" onClose={props.handleOnClose} dismissible>\r\n          <Alert.Heading className=\"text-center\" >Oh snap! Input syntax is wrong!</Alert.Heading>\r\n          <p>\r\n          Syntax: utterance; intent; entityName1:entityType1; entityName2:entityType2; ... <br/>\r\n          Example: Fly me to Rio on the 24th; BookFlight; Rio:place; 24th:dateTimeV2 \r\n          </p>\r\n        </Alert>\r\n      );\r\n  }\r\n\r\nexport default AlertInputError;","import {Form, Button} from 'react-bootstrap';\r\n\r\nfunction InputUtterances(props) {\r\n  return (\r\n    <Form className=\"text-center\" onSubmit={props.handleSubmit}>\r\n      <Form.Group>\r\n        <Form.Label><h4>Input Utterances</h4></Form.Label>\r\n        <Form.Control as=\"textarea\" style={{ height: \"60vh\" }} value={props.inputString} onChange={props.handleChange} />\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n}\r\n\r\n\r\nexport default InputUtterances;","import { Form, Button } from 'react-bootstrap';\r\nimport ReactJson from 'react-json-view';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst style = {\r\n    border: \"1px solid #ced4da\",\r\n    borderRadius: \".25rem\",\r\n    transition: \"border-color .15s ease-in-out,box-shadow .15s ease-in-out\",\r\n    padding: \".375rem .75rem\",\r\n    height: \"60vh\",\r\n    overflowY: \"scroll\"\r\n}\r\n\r\nfunction ResponseJSON(props) {\r\n\r\n    function downloadObjectAsJson() {\r\n        var fileName = 'Utterance.json';\r\n\r\n        var fileToSave = new Blob([JSON.stringify(props.jsonObject, null, 4)], {\r\n            type: 'application/json',\r\n            name: fileName\r\n        });\r\n\r\n        saveAs(fileToSave, fileName);\r\n    }\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group >\r\n                <div className=\"text-center\">\r\n                    <Form.Label><h4>Response JSON</h4></Form.Label>\r\n                </div>\r\n                <div style={style}>\r\n                    <ReactJson\r\n                        src={props.jsonObject}\r\n                        theme={\"summerfruit:inverted\"}\r\n                        onEdit={props.onEdit}\r\n                        displayDataTypes={false}\r\n                        enableClipboard={false}\r\n                    />\r\n                </div>\r\n            </Form.Group>\r\n\r\n            <div className=\"text-center\">\r\n                <Button variant=\"primary\" type=\"submit\" onClick={downloadObjectAsJson} >\r\n                    Download\r\n                </Button>\r\n            </div>\r\n        </Form>\r\n    );\r\n}\r\n\r\n\r\nexport default ResponseJSON;","import React from 'react';\n\nimport { DefaultNavbar, AlertInputError, InputUtterances, ResponseJSON } from './components';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col } from 'react-bootstrap'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputString: 'Syntax: \\nutterance; intent; entityName1:entityType1; entityName2:entityType2; ... \\n',\n      jsonObjects: [],\n      showError: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleOnClose = this.handleOnClose.bind(this);\n    this.parseJSON = this.parseJSON.bind(this);\n    this.onEdit = this.onEdit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ inputString: event.target.value });\n  }\n\n  handleSubmit(event) {\n    this.state.inputString === '' ? alert('Utterances are empty') : this.parseJSON();\n    event.preventDefault();\n  }\n\n  handleOnClose() {\n    this.setState({ showError: false })\n  }\n\n  onEdit(event) {\n    this.setState({ jsonObjects: event.updated_src }, function () {\n      console.log(this.state.jsonObjects)\n    })\n  }\n\n  parseJSON() {\n    let jsonObjects = []\n\n    try {\n      for (let line of this.state.inputString.split(/\\r?\\n/)) {\n        let [utterance, intent, ...entities] = line.split(/;/)\n        let responseJSON = {\n          \"text\": utterance.trim(),\n          \"intent\": intent.trim(),\n          \"entities\": []\n        }\n\n        for (let entity of entities) {\n          let [entityName, entityType] = entity.split(/:/)\n          entityName = entityName.trim()\n          entityType = entityType.trim()\n          responseJSON.entities.push(\n            {\n              \"entity\": entityType,\n              \"startPos\": utterance.indexOf(entityName),\n              \"endPos\": utterance.indexOf(entityName) + entityName.length - 1\n            }\n          )\n        }\n\n        jsonObjects.push(responseJSON)\n      }\n\n      this.setState({ jsonObjects: jsonObjects }, function () {\n        console.log(this.state.jsonObjects);\n      })\n\n    } catch (err) {\n      console.log(err)\n      this.setState({ showError: true })\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <DefaultNavbar />\n        <br />\n        <Container>\n          {this.state.showError? \n          <Row className=\"justify-content-md-center\">\n            <AlertInputError handleOnClose={this.handleOnClose}/>\n          </Row>\n          :\n          \"\"\n          } \n          <Row>\n            <Col>\n              <InputUtterances\n                inputString={this.state.inputString}\n                handleSubmit={this.handleSubmit}\n                handleChange={this.handleChange}\n              />\n            </Col>\n            <Col>\n              <ResponseJSON\n                jsonObject={this.state.jsonObjects}\n                onEdit={this.onEdit}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}